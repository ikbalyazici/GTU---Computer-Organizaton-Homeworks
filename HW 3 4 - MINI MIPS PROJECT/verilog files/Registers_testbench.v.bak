`timescale 1 ps / 1 ps

module Registers_testbench();

	reg RegWrite;
	reg [2:0] RegReadA;
	reg [2:0] RegReadB;
	reg [2:0] WriteRegister;
	reg [31:0] WriteData;
	wire [31:0] ReadDataA;
	wire [31:0] ReadDataB;
	
	
	Registers Reginst (.RegWrite(RegWrite), .RegReadA(RegReadA), .RegReadB(RegReadB), .WriteRegister(WriteRegister), 
							 .WriteData(WriteData), .ReadDataA(ReadDataA), .ReadDataB(ReadDataB));
	
	initial
		begin
			RegReadA = 3'b001;
			RegReadB = 3'b110;
			WriteRegister = 3'b011;
			WriteData = 32'01010101010101010101010101010101
			RegWrite = 1'b0;
			
			#5 Funct = 3'b001;
			   ALUOp = 3'b111;
			
			#5 Funct = 3'b010;
				ALUOp = 3'b111;
			
			#5 Funct = 3'b011;
				ALUOp = 3'b111;
			
			#5 Funct = 3'b100;
				ALUOp = 3'b111;
			
			#5 Funct = 3'b101;
				ALUOp = 3'b111;
			
			#5 Funct = 3'b110;
				ALUOp = 3'b001;
			
			#5 Funct = 3'b111;
				ALUOp = 3'b000;
			
			#5 Funct = 3'b000;
				ALUOp = 3'b101;
			
			#5 Funct = 3'b001;
				ALUOp = 3'b100;
			
			#5 Funct = 3'b001;
				ALUOp = 3'b110;
			
			#5 Funct = 3'b001;
				ALUOp = 3'b110;
			
			#5 Funct = 3'b101;
				ALUOp = 3'b110;
			
			#5 Funct = 3'b100;
				ALUOp = 3'b001;
			
			#5 Funct = 3'b111;
				ALUOp = 3'b001;
			
		end
		
endmodule